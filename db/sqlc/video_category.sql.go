// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: video_category.sql

package db

import (
	"context"
)

const createVideoCategory = `-- name: CreateVideoCategory :one
INSERT INTO video_categories (
    video_category_name,
    category_parent_name,
    created_at
) VALUES (
             $1, $2, DEFAULT
         )
    RETURNING video_category_name, category_parent_name, created_at
`

type CreateVideoCategoryParams struct {
	VideoCategoryName  string `json:"video_category_name"`
	CategoryParentName string `json:"category_parent_name"`
}

func (q *Queries) CreateVideoCategory(ctx context.Context, arg CreateVideoCategoryParams) (VideoCategory, error) {
	row := q.db.QueryRow(ctx, createVideoCategory, arg.VideoCategoryName, arg.CategoryParentName)
	var i VideoCategory
	err := row.Scan(&i.VideoCategoryName, &i.CategoryParentName, &i.CreatedAt)
	return i, err
}

const getCategory = `-- name: GetCategory :one
SELECT video_category_name, category_parent_name, created_at
FROM video_categories
WHERE video_category_name = $1 LIMIT 1
`

func (q *Queries) GetCategory(ctx context.Context, videoCategoryName string) (VideoCategory, error) {
	row := q.db.QueryRow(ctx, getCategory, videoCategoryName)
	var i VideoCategory
	err := row.Scan(&i.VideoCategoryName, &i.CategoryParentName, &i.CreatedAt)
	return i, err
}
